name: CD - Deploy HTML Site

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (staging or production)"
        required: true
        default: "staging"
      dry_run:
        description: "Simulate deployment (true/false)"
        required: false
        default: "false"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Build and Tag Image
        if: github.event.inputs.dry_run != 'true'
        run: |
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          if [ -z "$ENVIRONMENT" ]; then
            ENVIRONMENT="staging"
          fi
           IMAGE_TAG="${ENVIRONMENT}-$(echo $GITHUB_SHA | cut -c1-7)"
           echo "Using tag: $IMAGE_TAG"
           docker build -t ${{ secrets.DOCKER_USERNAME }}/gamingecsite:$IMAGE_TAG .
           echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV


      - name: Push Image
        if: github.event.inputs.dry_run != 'true'
        run: docker push ${{ secrets.DOCKER_USERNAME }}/gamingecsite:${{ env.IMAGE_TAG }}


      - name: Notify Webhook
        if: github.event.inputs.dry_run != 'true'
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d "{\"text\": \"Deployed to ${{ github.event.inputs.environment }} with tag: ${{ env.IMAGE_TAG }}\"}" \
            ${{ secrets.DEPLOYMENT_WEBHOOK }}

     
